{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/henryfradley/personalProjects/hcfportfolio/pages/projects/[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { useRouter } from 'next/router';\nimport projects from '../../data/projectData.js';\n\nvar Project = function Project() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n  console.log('projects', projects.data);\n  var allProjects = projects.data;\n  var currentProject;\n\n  var _iterator = _createForOfIteratorHelper(allProjects),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var project = _step.value;\n\n      if (project.link === id) {\n        currentProject = project;\n      }\n    } // const data = projects.data[id];\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Project, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/Users/henryfradley/personalProjects/hcfportfolio/pages/projects/[id].js"],"names":["useRouter","projects","Project","router","id","query","console","log","data","allProjects","currentProject","project","link"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AADoB,MAEZI,EAFY,GAELD,MAAM,CAACE,KAFF,CAEZD,EAFY;AAIpBE,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,QAAQ,CAACO,IAAjC;AACA,MAAMC,WAAW,GAAGR,QAAQ,CAACO,IAA7B;AACA,MAAIE,cAAJ;;AANoB,6CAOAD,WAPA;AAAA;;AAAA;AAOpB,wDAAiC;AAAA,UAAxBE,OAAwB;;AAC/B,UAAIA,OAAO,CAACC,IAAR,KAAiBR,EAArB,EAAyB;AACvBM,QAAAA,cAAc,GAAGC,OAAjB;AACD;AACF,KAXmB,CAapB;;AAboB;AAAA;AAAA;AAAA;AAAA;;AAepB,sBACE;AAAA,2BACE;AAAA,gBAAIP;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAtBD;;GAAMF,O;UACWF,S;;;KADXE,O;AAwBN,eAAeA,OAAf","sourcesContent":["import { useRouter } from 'next/router'\nimport projects from '../../data/projectData.js';\n\n\nconst Project = () => {\n  const router = useRouter()\n  const { id } = router.query\n\n  console.log('projects', projects.data)\n  const allProjects = projects.data;\n  let currentProject;\n  for (let project of allProjects) {\n    if (project.link === id) {\n      currentProject = project\n    }\n  }\n\n  // const data = projects.data[id];\n\n  return (\n    <div>\n      <a>{id}</a>\n\n    </div>\n\n  );\n};\n\nexport default Project;"]},"metadata":{},"sourceType":"module"}